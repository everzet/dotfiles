# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
#on-focus-changed = ['move-mouse window-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.top =        8
outer.left =       8
outer.right =      8
outer.bottom =     8

# Terminal always goes to the terminal workspace
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['move-node-to-workspace t']

# Browsers always go to the browser workspace
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = ['move-node-to-workspace b']
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = ['move-node-to-workspace b']

# Mail goes to chats
[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = ['move-node-to-workspace c']

# Messages goes to chats
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['move-node-to-workspace c']

# Slack goes to chats
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace c']

# Finder goes to explore
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['move-node-to-workspace e']

# Notes go to explore
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = ['move-node-to-workspace e']

# Reminders go to explore
[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = ['move-node-to-workspace e']

# Postico goes to explore
[[on-window-detected]]
if.app-id = 'at.eggerapps.Postico'
run = ['move-node-to-workspace e']

# RapidAPI goes to explore
[[on-window-detected]]
if.app-id = 'com.luckymarmot.Paw'
run = ['move-node-to-workspace e']

# OrbStack goes to explore
[[on-window-detected]]
if.app-id = 'dev.kdrag0n.MacVirt'
run = ['move-node-to-workspace e']

# CleanMyMac floats to explore
[[on-window-detected]]
if.app-id = 'com.macpaw.CleanMyMac5'
run = ['layout floating', 'move-node-to-workspace e']

# Alfred settings float
[[on-window-detected]]
if.app-id = 'com.runningwithcrayons.Alfred-Preferences'
run = ['layout floating']

# Music goes to audio-video
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = ['move-node-to-workspace a']

# Zoom goes to zooms
[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = ['move-node-to-workspace z']

# Lock displays to fixed workspaces
# https://nikitabobko.github.io/AeroSpace/guide.html#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
t = ['studio display', 'built-in'] # show terminal on Studio Display if connected, built-in if not
e = ['lg ultrawide', 'lg hdr'] # do exploration on an external display
c = ['built-in'] # show chats on built-in if Studio Display took the terminal

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.main.binding]

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-ctrl-cmd-m = 'mode move'
alt-shift-ctrl-cmd-g = 'mode group'
alt-shift-ctrl-cmd-r = 'mode resize'
alt-shift-ctrl-cmd-s = 'mode service'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-shift-ctrl-cmd-h = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
alt-shift-ctrl-cmd-j = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
alt-shift-ctrl-cmd-k = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors up'
alt-shift-ctrl-cmd-l = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-shift-ctrl-cmd-t = 'workspace t' # [t]erminal
alt-shift-ctrl-cmd-b = 'workspace b' # [b]rowser
alt-shift-ctrl-cmd-c = 'workspace c' # [c]hats
alt-shift-ctrl-cmd-z = 'workspace z' # [z]ooms
alt-shift-ctrl-cmd-e = 'workspace e' # [e]xplore
alt-shift-ctrl-cmd-a = 'workspace a' # [a]udio-video

# See: https://nikitabobko.github.io/AeroSpace/commands#fullscreen
alt-shift-ctrl-cmd-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-shift-ctrl-cmd-d = 'layout floating tiling'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-ctrl-cmd-minus = 'resize smart -50'
alt-shift-ctrl-cmd-equal = 'resize smart +50'

# 'move' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.move.binding]
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
esc = 'mode main'
enter = 'mode main'
alt-shift-ctrl-cmd-m = 'mode move'
alt-shift-ctrl-cmd-g = 'mode group'
alt-shift-ctrl-cmd-r = 'mode resize'
alt-shift-ctrl-cmd-s = 'mode service'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
h = 'move left'
j = 'move down'
k = 'move up'
l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
t = ['move-node-to-workspace t', 'workspace t'] # [t]erminal
b = ['move-node-to-workspace b', 'workspace b'] # [b]rowser
c = ['move-node-to-workspace c', 'workspace c'] # [c]hats
z = ['move-node-to-workspace z', 'workspace z'] # [z]ooms
e = ['move-node-to-workspace e', 'workspace e'] # [e]xplore
a = ['move-node-to-workspace a', 'workspace a'] # [a]udio-video

# 'resize' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.resize.binding]
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
esc = 'mode main'
enter = 'mode main'
alt-shift-ctrl-cmd-m = 'mode move'
alt-shift-ctrl-cmd-g = 'mode group'
alt-shift-ctrl-cmd-r = 'mode resize'
alt-shift-ctrl-cmd-s = 'mode service'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'
h = 'resize width -50'
l = 'resize width +50'
j = 'resize height -50'
k = 'resize height +50'

# 'group' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.group.binding]
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
esc = 'mode main'
enter = 'mode main'
alt-shift-ctrl-cmd-m = 'mode move'
alt-shift-ctrl-cmd-g = 'mode group'
alt-shift-ctrl-cmd-r = 'mode resize'
alt-shift-ctrl-cmd-s = 'mode service'

# See: https://nikitabobko.github.io/AeroSpace/commands#join-with
h = 'join-with left'
j = 'join-with down'
k = 'join-with up'
l = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
s = 'layout accordion horizontal vertical'
t = 'layout tiles horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#flatten-workspace-tree
x = 'flatten-workspace-tree'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
esc = 'mode main'
enter = 'mode main'
alt-shift-ctrl-cmd-m = 'mode move'
alt-shift-ctrl-cmd-g = 'mode group'
alt-shift-ctrl-cmd-r = 'mode resize'
alt-shift-ctrl-cmd-s = 'mode service'

# See: https://nikitabobko.github.io/AeroSpace/commands#reload-config
c = ['reload-config', 'mode main']
