# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = ['move-mouse window-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# Lock displays to fixed workspaces
# https://nikitabobko.github.io/AeroSpace/guide.html#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
1 = ['lg ultrawide', 'built-in']
2 = ['studio display', 'lg hdr']
3 = ['built-in', 'lg ultrawide']

# Float CleanMyMac
[[on-window-detected]]
if.app-id = 'com.macpaw.CleanMyMac4'
run = ['layout floating']

# Float Keymapp
[[on-window-detected]]
if.app-id = 'io.zsa.keymapp'
run = ['layout floating']

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.main.binding]

# Switch mode to service
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-a = 'mode service'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-h = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
ctrl-alt-j = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
ctrl-alt-k = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors up'
ctrl-alt-l = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-alt-1 = 'workspace 1'
ctrl-alt-2 = 'workspace 2'
ctrl-alt-3 = 'workspace 3'
ctrl-alt-4 = 'workspace 4'
ctrl-alt-5 = 'workspace 5'
ctrl-alt-6 = 'workspace 6'
ctrl-alt-7 = 'workspace 7'
ctrl-alt-8 = 'workspace 8'
ctrl-alt-9 = 'workspace 9'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# Exit mode
enter = 'mode main'
esc = 'mode main'

# Base shortcuts
r = ['reload-config', 'mode main']
f = ['fullscreen', 'mode main']
t = ['flatten-workspace-tree', 'mode main'] # reset layout

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
period = 'layout accordion horizontal vertical' # Toggle between horizontal and vertical accordion
slash = 'layout tiles horizontal vertical' # Toggle between horizontal and vertical tiles
comma = 'layout floating tiling' # Toggle between floating and tiling layout

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
h = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
j = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
k = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors up'
l = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-h = 'move left'
ctrl-j = 'move down'
ctrl-k = 'move up'
ctrl-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#join-with
shift-h = 'join-with left'
shift-j = 'join-with down'
shift-k = 'join-with up'
shift-l = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
1 = 'workspace 1'
2 = 'workspace 2'
3 = 'workspace 3'
4 = 'workspace 4'
5 = 'workspace 5'
6 = 'workspace 6'
7 = 'workspace 7'
8 = 'workspace 8'
9 = 'workspace 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-1 = ['move-node-to-workspace 1', 'workspace 1']
ctrl-2 = ['move-node-to-workspace 2', 'workspace 2']
ctrl-3 = ['move-node-to-workspace 3', 'workspace 3']
ctrl-4 = ['move-node-to-workspace 4', 'workspace 4']
ctrl-5 = ['move-node-to-workspace 5', 'workspace 5']
ctrl-6 = ['move-node-to-workspace 6', 'workspace 6']
ctrl-7 = ['move-node-to-workspace 7', 'workspace 7']
ctrl-8 = ['move-node-to-workspace 8', 'workspace 8']
ctrl-9 = ['move-node-to-workspace 9', 'workspace 9']
